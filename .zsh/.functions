# Colors
reset="\033[0m"
gray="\033[1;90m"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
blue="\033[1;34m"
magenta="\033[1;35m"
cyan="\033[1;36m"
white="\033[1;37m"

cl0="${gray}"
cl1="${red}"
cl2="${green}"
cl3="${yellow}"
cl4="${blue}"
cl5="${magenta}"
cl6="${cyan}"
cl7="${white}"

# Support functions
toupper() {
	echo $* | tr '[:lower:]' '[:upper:]'
}

lower() {
	echo $* | tr '[:upper:]' '[:lower:]'
}

# Compile C++ 
cpp_ver="c++20"
cpp_vers=$(toupper $cpp_ver)

cpp() { 
	g++-11 -std=$cpp_ver $1.cpp -o $1.exe			
	file_path="$PWD/$1.exe"

	echo -e "${cyan}[TASK: $1.cpp]${reset}"
	echo -e "${magenta}[COMPILING IN ${yellow}$cpp_vers${magenta}]${reset}"
	echo -e "${green}[FINISHED]${reset}"

	if [ ! -f "$file_path" ]; then
  		echo -e "${red}[ERROR: CAN NOT FOUND EXECUTABLE FILE]${reset}"
	else
		echo -e "${red}[EXECUTING]${reset}"
		./$1.exe
	fi

	echo -e "${blue}[COMPLETED]${reset}"
}

c() { 
	g++-11 -std=$cpp_ver $1.cpp -o $1.exe			
	file_path="$PWD/$1.exe"

	if [ ! -f "$file_path" ]; then
  		echo -e "${red}[ERROR: CAN NOT FOUND EXECUTABLE FILE]${reset}"
	else
		./$1.exe
	fi
}

# Format C++
format() {
	clang-format -style=google -dump-config > .clang-format
}

tidy() {
	clang-format -style=file -i *.cpp
	clang-format -style=file -i *.h
}

# Compile Python
py3() {
	python3 $1.py								
}

# Weather
weather() {
	local CITY=${1:-$1}
	curl -4 "wttr.in/$CITY"
}
